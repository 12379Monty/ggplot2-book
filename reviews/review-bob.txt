Ggplot2 – Comments from Bob Muenchen

Who would find this type of book useful? Can you describe a kind of book that is needed in this area? Will the book serve as a reference, textbook, or both?
 
Anyone using data graphics would find this book useful. It starts out at a fairly low level, assuming little previous knowledge and ends up taking the reader to a very deep level of abstraction. I'm sure people will use it both to learn ggplot2 and to use as a frequent reference. It is not laid out as a textbook, lacking things like exercises but only this book and Wilkinson's Grammar of Graphics cover these important concepts. To actually experiment with Wilkinson's book, you need to purchase a copy of SPSS Base, whose commercial price is $1,700. 
 
2.  Would you recommend any changes in the contents that would make this book more useful? 

The overall structure of the book is good and Hadley has a really nice writing style. The book's only major problem is that it could use a lot more examples. This book must cover the theory, but I think the average user will need many examples to fully grasp these abstract concepts.  It might be feasible to have an early chapter that gave lots of examples before digging into the theory.  
 
3. Please explain why you do or do not regard the manuscript as technically correct, clearly written, and at an appropriate level of difficulty. What are its strengths and weaknesses? You may comment on the manuscript; if you do so, please separate the marked pages.

The book is technically correct and very clearly written. The only times I got lost were when a graph appeared without the full syntax to create it, or when a command was listed without an accompanying graph. See detailed comments below. 
 
4. What other books are available on this subject? Do they have any particularly strong or weak features? Does this book offer any significant advantages?

A very significant advantage of this book is that it is the only one that fully explains the seminal and powerful grammar of graphics concepts using software that is free and very popular. The R Internet discussion list is very active with people asking how to do graphs in ggplot2 so I have no doubt it will be a big seller. I would guess initially that it might sell somewhat below the level of Sarkar's Lattice book since Lattice has been around longer. In the long run though, I think ggplot2 will become more popular than Lattice, if it isn't already. It is as easy to use while being substantially more powerful. 
 
5. Please explain why you would or would not recommend publication. If you would, what are the most important changes that should be made before publication?

I definitely recommend publication. The missing chapters need filling in of course and I would like to see more examples but this is an important book.

There is an important change you must make before publishing this book in electronic form. The vast number of points displayed on some pages took my powerful desktop computer about five minutes to render! Also, I was unable to print the PDF for the same reason. Two printers were driven to convulsions and started spewing out nonsense. I had to do the review on the screen, sometimes hitting page down immediately after seeing a new page, knowing I would have plenty of time to finish reading it before the computer would be able to display the next page. Typical e-book readers would choke on it. 
 
 

Below are some comments, most of them very minor. I usually mark suggested changes in [brackets] showing what to add, or what to remove.

P1: "This book will introduce you to ggplot2 as a novice, unfamiliar with the grammar, and turn you into an expert who can build new components to extend the grammar." That may intimidate people who just want to apply it rather than extend it. Perhaps, "This book will introduce you to ggplot2 as a novice, unfamiliar with the grammar, and turn you into an expert user. It even covers how to build new components to extend the grammar."

p2: This [will tell you] provides convenient links to what’s new and different in each release.

The book website, http://had.co.nz/ggplot2/book, provides updates to this book[,]. All…

p5: Understanding how scales work[s] is essential…

p5: I would list the chapter overviews with headings like the first one: "Chapter 2, Chapter 3…" rather than bullets.

2.1 …with your first ggplot[2] plot…

2.4 It would be nice to see the code for plot and then qplot so people would see the advantage of qplot. You might show just the colors with plot, then qplot. Then in a following paragraph mention that size and shape are just as easy. On the choice of colors, I would use a gradient from say blue to green (with dark green representing lots of money). If cut were ordinal would ggplot2 would do that type of thing automatically or not. Here I would think pink and purple were close colors but they are at opposite ends of the range of cut.

The mention of colour=I("red") is hard to guess how to use at this point without an example. I really like the description of controlling transparency with fractions.

Sorry for the nitpick here but when I read "For 1D distributions…" it either says "ID" or the font makes it look that way. I got to thinking about data that is "iid" and lost it for a moment. Changing the character (if it's the letter "i") or the font or simply writing out "one dimensional" would clarify that.

Instead of the esoteric "O(n**2) in memory" you might say, "Lowess requires too many computational resources to work well for large datasets…"

When discussing things like formula=y~ns(x,2) the example code there would help. You know too much! I 've spent way too much time trying such additions in various locations in the code. The one that finally worked made good sense, but so do many other variations. Same for se=FALSE.

2.5.2 You don't say clearly what the three lines are in the first quantile plot. Does this select the data below the first quartile of the x variable, then fit it, then select between the first and third quartiles, fit that, and then select the data above the third quartile and fit? Or perhaps 1-50, 25-75, 50-75 so that the number of cases remains the same? Also, I think the formula with the breakpoints is missing a tilde.

2.5.3 You might follow the lead of the diamond salesmen and call the small diamonds, "inexpensive" rather than cheap since many of your readers purchased them.

P 18: "…takes care of counting the number of instances of each class for you - you don’t need to tabulate your values beforehand [as you do] with barchart in base R.

Figure 2.14: You comment that it's hard to tell how correlated these two variables are. I think that's because you're comparing events on the time axis but have not aligned your plots on that axis. By doing so, you have made them hard to compare. I had to look at the path plot and read your description several times before I could figure out what it was displaying. This lack of clarity may be due to my lack of exposure to time series data.

2.6: "It allows comparison of subsets of the [whole], and [an] alternative to styling subsets[s] differently and displaying [them] on the same plot."  The text refers to figure 2.6. That is actually 2.15.

4.1 You start referring to function names with their parentheses. This helps point out when something is a function and especially helps differentiate function names from names of packages and arguments. That's probably a good idea but one which you will want to apply consistently across chapters.

P30: "Data needs little explanation: it’s the data frame that you want to visualise." You have described this before, so you might want to reword this. Or perhaps you're trying to say something different about data and aes that is not clear. I see later you complete the point on p31, "The data (optional). You can use this to override the default plot data set. Otherwise, it omitted (as you will do most of the time), the layer will use the default plot data."

"…in brief, they move [objects around] on the plot to avoid overplotting.

"We can make it shorter by relying on the fact that every geom is associated with a default statistic and position, and with every statistic a default geom. This means that you only need to specify one of stat or geom to get a completely specified layer." This is only half of how you got to geom_point(). Rather than simply depend upon defaults, you actually have different functions that help set them.

The example that includes this:

Facetting: facet_grid(. ~ ., FALSE)

> p <- p + geom_point()

is quite complex. An advanced R user may have no problem with it, but I think it would be more clear to include a bit of text between these two blocks of code to make part of the point and then continue it at the bottom. I recall being momentarily confused that you could store the graph specs as a variable and add arguments to it using +. Offhand I cannot recall anything else in R quite like it, so even advanced R users might have trouble at this point. Perhaps it is an R standard that I just haven't seen elsewhere (outside of math of course). The second set of output I find confusing. It seems to me that there should be something like, "geom_point:TRUE" to show that it is now turned on. I do not see where, " the order of data and mapping arguments is switched between ggplot() and the layer functions." I've looked at the two sets of output and don't see these two switching.

"You must have a default data if you are using facetting, but otherwise it is optional." Does this mean otherwise your dataframe can be attached? I think so. If so, I would say that. Perhaps, "Your data must be in a dataframe. If you are using facetting, you must supply its name with the data argument. If you are not doing facetting, you can attach the dataframe instead of using the data argument. If you are going to use the concept of "default data", you might define that here. I would have thought an attached dataframe would have been a default dataset. That is, a default is what you get if you don't specify and for the ggplot function that would be an attached data frame. However once you are in ggplot's layers, they too have defaults, which would instead be what you HAD TO SPECIFY on the data argument. Am I following you? I think you have two layers of "defaultedness", R's and ggplot's. If so, you can see how confusing this point is and it needs clarification.

The fact that ggplot stores the data, has important implications for large data sets. This should be in your graph package comparison table. I would include that table when you initially compare the packages.

p34 > p + geom_point(aes(y = disp)) the graph for this still shows wt on the y axis.

p35: "…which effectively creates a new [variable] with the value “red” repeated according to R’s vector recycling rules…" Caption: "When ”darkblue” is mapped to colour, it is treated as a [data] value and scaled with the default colour scale."

"The group aesthetic divides the [the] data set…" 

4.5.3 This is a fantastic section! Still, as in many places, I would write out the complete code for each plot.

Table 4.2. I would change Name in the column heading to Geom. Also table 4.3 Stats would be a better heading than Name.

p39: these boxplots are slightly out of place between the tables instead of before them.

Fig 4.5: These are great examples of how creative you can be in ggplot2. You might consider showing these in the start of chapter 1 as a motivator. A reader has had to get through a lot of abstraction to begin to see this creativity. You might even consider putting them on the cover of the book. The back cover should definitely include a statement similar to, "ggplot2 offers a level of control beyond that of any other R graphics package, while still being easy to use."

Table 4.4 is very interesting! It's almost like you have the concept of a generic geom.

p42: "we [were] only really need two values of age to draw the predicted straight line…"

"Once we have the predictions we can then display[s] them…"

> oplot + geom_line(data = preds, colour = ”#3366FF”, size= 0.4) is that a hexidecimal code for a color?  [I've just read the appendix about #rrggbb, which I'm sure I've read before. I would avoid that complexity at this point of the book & leave it for the appendix.]

P43 & 44: why are the percent signs in: %+% ?

5.1: I might be slow but this made stop to think what you meant. "For temporal data, it might be significant [historical] events outside the data."

p46: "The examples in this section use a mixture of ggplot() and qplot() calls, [using the simpler qplot when possible]?  Instead of the vague "reflecting real life."

"However, breaking the plot into many small squares produces distracting visual [artifacts]." I always wondered why the developer of that method added the complexity of hexagrams over squares!

"Carr (reference) suggests using hexagons instead, and this is implemented with geom_hexagon, using the capabilities of the hexbin package." Do you mean "which borrowed this capability from the hexbin package." or do you actually have to load hexbin?

5.7 I assume is under construction.

Table 5.1 is missing its caption.

5.10: I hope this is under construction. I don't think many people will figure out how to use, e.g., geom_vline without an example.

The topic of weighting in Ch 5 is very well done. I don't recall seeing it covered in any other graphics book but it is an important topic.

6.1: "…but understanding how scales work [delete as redundant: and how you can control them] gives you much more control over your plots." 

6.2 "While the range of the scale is specified during construction, the domain must be learn[ed] from the data.

"[The] Each scale also has range."

"For continuous scales, this will be a 1d path [to] some more complicated space."

"The process by [which] a scale learns the domain"

p55. You refer to "the guide" but have not defined that yet: "Breaks differs from limits in that it affects what appears on the guide…" That's defined later in 6.5. I found it really hard to avoid the trap of using odd terms before defining them.

Fig 6.2: The middle plot displays 5.5 and 6.5 on the X axis, not 4.5, 5.5.

6.3.1 ends abruptly, but I expect you already know that.

6.4.1 "This argument allows [you] to specify a non-linear transformation."

Fig 6.3 It would be nice to see an example where the tick marks are logarithmically spaced.

Fig 6.4 Given that the range splits at the median, I'm surprised we don't see more red in the plot.

Fig 6.6 You do not discuss it in the main text.

p62 "…in npc coordinates…" I don't recall you defining this term or how the npc's work.

"the first number is a multiplicative amount and the second is an additive additive [amount]."  I don't understand what is meant by the multiplicative and additive amounts in both parts of 6.5.1 that use them. I think an example would be very helpful.

6.6 "Brewer (1994a,b) for how to [choose] colours that work well in a wide variety of situations,  particularly for area plots.

This is probably just an American vs. New Zealand difference but I'm more used to the combination "different from" while you have "different to" at various locations as 11.1, "This is different to base and lattice graphics"

p75 for consistency with the title "PolishING your plot".

• Edit[ing] existing objects on the plot, §11.4.

• Add[ing] annotations to the plot, §11.6.

• Removing grobs from a plot, §11.5.

• Arrang[ing] multiple plots on a single page, §11.7.

Fig. 11.3: A selection of the most important grobs. geom_point, major-vertical and label [each] point to a single element of the grob.

p79. These examples are essential. ggplot2 is a complex and abstract system. To add to that the great complexity of grid creates an extreme amount of complexity. You might also demonstrate a change of font to something like Times Roman.

11.5 Does keep delete all other grobs? What does ignore do? An example would be helpful.

11.6 Examples are really needed here. Also define what pretty=FALSE does (that comes up in 11.7).

11.7 "By default, [entering the name of] a ggplot object at the R command prompt will [cause it to] display to the screen. To exercise more control…"  You need to display the examples in this section.

11.8 My head has just exploded. Probably unavoidable though. That's wild stuff.

Fig B.1: How does one use the named colors in LUV space? Does this graph help you use it, or just display the range of colors?

All-in-all, I learned a lot from reading this. Good stuff! 
